version: '3'
services:
  web:
    image: botium/botium-box-server:2.11.0
    ports:
     - "4000:4000"
    environment:
      LICENSE_KEY: # add your license key here
      DATABASE_URL: mysql://root:prisma@mysql:3306/box@prod13
      BOTIUMBOX_QUEUE_REDISURL: redis://redis:6379
      ZAP_ENDPOINT: http://zap:8080
      DEBUG: botium*
      BOTIUMBOX_SCANFORTESTSETS:
      #HTTP_PROXY: https://xxx
      #HTTPS_PROXY: https://xxx
      #NO_PROXY: redis
      #NODE_TLS_REJECT_UNAUTHORIZED: 0
    depends_on:
      - redis
    restart: always
    networks:
      - botiumBox
    volumes:
      - "${WEBAPP_STORAGE_HOME}/testsets:/app/server/testsets"
      - "${WEBAPP_STORAGE_HOME}/resources:/app/server/resources"
      - "${WEBAPP_STORAGE_HOME}/botiumwork:/app/server/botiumwork"
  agent:
    image: botium/botium-box-agent:2.11.0
    environment:
      BOTIUMBOX_QUEUE_REDISURL: redis://redis:6379
      DEBUG: botium*
      #HTTP_PROXY: https://xxx
      #HTTPS_PROXY: https://xxx
      #NO_PROXY: redis
      #NODE_TLS_REJECT_UNAUTHORIZED: 0
    depends_on:
      - web
      - redis
    restart: always
    networks:
      - botiumBox
    volumes:
      - "${WEBAPP_STORAGE_HOME}/testsets:/app/agent/testsets"
      - "${WEBAPP_STORAGE_HOME}/resources:/app/agent/resources"
      - "${WEBAPP_STORAGE_HOME}/botiumwork:/app/agent/botiumwork"
  redis:
    image: redis:alpine
    restart: always
    networks:
      - botiumBox
  zap:
    image: owasp/zap2docker-stable:latest
    command: [
      "zap.sh",
      "-daemon",
      "-host", "0.0.0.0", "-port", "8080",
      "-config", "api.disablekey=true",
      "-config", "api.addrs.addr.name=.*",
      "-config", "api.addrs.addr.regex=true"
    ]
    networks:
      - botiumBox
networks:
  botiumBox:
