version: '3'
services:
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs/cert.crt:/etc/nginx/cert.crt
      - ./certs/cert.key:/etc/nginx/cert.key
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    restart: always
    networks:
      - botiumBox
  web:
    image: botium/botium-box-server:2.12.0
    ports:
     - "4000:4000"
    environment:
      DATABASE_URL: mysql://root:prisma@mysql:3306/box@prod13
      #COACH_WORKER_ENDPOINT: http://coach:8080/1.0
      #SPEECH_PROCESSING_ENDPOINT: https://speech.botiumbox.com
      #SPEECH_PROCESSING_APIKEY:
      BOTIUMBOX_QUEUE_REDISURL: redis://redis:6379
      ZAP_ENDPOINT: http://zap:8080
      DEBUG: botium*
      BOTIUMBOX_SCANFORTESTSETS:
      #HTTP_PROXY: https://xxx
      #HTTPS_PROXY: https://xxx
      #NO_PROXY: redis
      #NODE_TLS_REJECT_UNAUTHORIZED: 0
    depends_on:
      - redis
      - mysql
    restart: always
    volumes:
      - "./testsets:/app/server/testsets"
      - "./resources:/app/server/resources"
      - "./botiumwork:/app/server/botiumwork"
    networks:
      - botiumBox
#  coach:
#    image: botium/botium-coach-worker:latest
#    restart: always
#    environment:
#      WEB_CONCURRENCY: 1
#    networks:
#      - botiumBox
  agent:
    image: botium/botium-box-agent:2.12.0
    environment:
      BOTIUMBOX_QUEUE_REDISURL: redis://redis:6379
      DEBUG: botium*
      #HTTP_PROXY: https://xxx
      #HTTPS_PROXY: https://xxx
      #NO_PROXY: redis
      #NODE_TLS_REJECT_UNAUTHORIZED: 0
    depends_on:
      - web
      - redis
    restart: always
    volumes:
      - "./testsets:/app/agent/testsets"
      - "./resources:/app/agent/resources"
      - "./botiumwork:/app/agent/botiumwork"
    networks:
      - botiumBox
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: prisma
    volumes:
      - "./mysql:/var/lib/mysql"
    networks:
      - botiumBox
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    depends_on:
      - mysql
    restart: always
    links:
      - mysql:db
    environment:
      MYSQL_ROOT_PASSWORD: prisma
    ports:
      - "4001:80"
    networks:
      - botiumBox
  redis:
    image: redis:alpine
    restart: always
    networks:
      - botiumBox
  zap:
    image: owasp/zap2docker-stable:latest
    command: [
      "zap.sh",
      "-daemon",
      "-host", "0.0.0.0", "-port", "8080",
      "-config", "api.disablekey=true",
      "-config", "api.addrs.addr.name=.*",
      "-config", "api.addrs.addr.regex=true"
    ]
    networks:
      - botiumBox
networks:
  botiumBox:
