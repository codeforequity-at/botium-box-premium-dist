version: '3'
services:
  nginx:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs/cert.crt:/etc/nginx/cert.crt
      - ./certs/cert.key:/etc/nginx/cert.key
    ports:
      - 443:443
    depends_on:
      - web
    restart: always
    networks:
      - botiumBox
  web:
    image: botium/botium-box-server:${BOX_VERSION}
    ports:
     - "4000:4000"
    environment:
      # LICENSE_KEY: # add your license key here or in the resources/license.key file
      PRISMA_ENDPOINT: http://prisma:4466/box/prod
      BOTIUMBOX_QUEUE_REDISURL: redis://redis:6379
      BOTIUMBOX_ENABLE_CONNECTORS: fbdirect,webspeech
      ZAP_ENDPOINT: http://zap:8080
      DEBUG: botium*
      TESTSETDIR_PUBLIC: ./testsets
      #HTTP_PROXY: https://xxx
      #HTTPS_PROXY: https://xxx
      #NO_PROXY: redis,prisma
      #NODE_TLS_REJECT_UNAUTHORIZED: 0
    depends_on:
      - redis
      - prisma
    restart: always
    volumes:
      - "./testsets:/app/server/testsets"
      - "./resources:/app/server/resources"
      - "./botiumwork:/app/server/botiumwork"
    networks:
      - botiumBox
  agent:
    image: botium/botium-box-agent:${BOX_VERSION}
    environment:
      BOTIUMBOX_AGENT_NAME: Botium Agent
      BOTIUMBOX_QUEUE_REDISURL: redis://redis:6379
      DEBUG: botium*
      #HTTP_PROXY: https://xxx
      #HTTPS_PROXY: https://xxx
      #NO_PROXY: redis,prisma
      #NODE_TLS_REJECT_UNAUTHORIZED: 0
    depends_on:
      - web
      - redis
    restart: always
    volumes:
      - "./testsets:/app/agent/testsets"
      - "./resources:/app/agent/resources"
      - "./botiumwork:/app/agent/botiumwork"
    networks:
      - botiumBox
  prisma:
    image: prismagraphql/prisma:1.34.8
    depends_on:
      - mysql
    restart: always
    environment:
      PRISMA_CONFIG: |
        port: 4466
        databases:
          default:
            connector: mysql
            host: mysql
            port: 3306
            user: root
            password: prisma
    networks:
      - botiumBox
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: prisma
    volumes:
      - "./mysql:/var/lib/mysql"
    networks:
      - botiumBox
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    depends_on:
      - mysql
    restart: always
    links:
      - mysql:db
    environment:
      MYSQL_ROOT_PASSWORD: prisma
    ports:
      - "4001:80"
    networks:
      - botiumBox
  redis:
    image: redis:alpine
    restart: always
    networks:
      - botiumBox
  zap:
    image: owasp/zap2docker-stable:2.7.0
    command: [
      "zap.sh",
      "-daemon",
      "-host", "0.0.0.0", "-port", "8080",
      "-config", "api.disablekey=true",
      "-config", "api.addrs.addr.name=.*",
      "-config", "api.addrs.addr.regex=true"
    ]
    networks:
      - botiumBox
  elasticsearch:
    image: botium/elasticsearch:${BOX_VERSION}
    restart: always
    volumes:
      - ./elasticsearch/esdata:/usr/share/elasticsearch/data
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      LOGSPOUT: "ignore"
    networks:
      - botiumBox
  logstash:
    restart: always
    image: botium/logstash:${BOX_VERSION}
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      DROP_NON_JSON: "false"
      STDOUT: "false"
    networks:
      - botiumBox
  kibana:
    restart: always
    image: botium/kibana:${BOX_VERSION}
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      LOGSPOUT: "ignore"
    networks:
      - botiumBox
  logspout:
    restart: always
    image: gliderlabs/logspout:v3
    command: 'syslog://logstash:5000'
    links:
      - logstash
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    depends_on:
      - elasticsearch
      - logstash
      - kibana
    networks:
      - botiumBox
networks:
  botiumBox:
